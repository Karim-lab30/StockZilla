@model StockZilla.Models.ProduitModel

@{
    ViewBag.Title = "Créer un produit";
}

<h2>Créer un produit</h2>

@using (Html.BeginForm("Create", "Produit", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div>
        <label>Nom du produit</label>
        @Html.TextBoxFor(m => m.NomProduit, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.NomProduit)
    </div>

    <div>
        <label>Catégorie</label>
        @Html.DropDownListFor(m => m.IdCategorie, ViewBag.Categories as SelectList, "Sélectionnez une catégorie", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.IdCategorie)
    </div>

    <div>
        <label>Quantité</label>
        @Html.TextBoxFor(m => m.Quantite, new { @class = "form-control", type = "number" })
        @Html.ValidationMessageFor(m => m.Quantite)
    </div>

    <div>
        <label>Prix moyen</label>
        @Html.TextBoxFor(m => m.PrixMoyen, new { @class = "form-control", type = "number", step = "0.01" })
        @Html.ValidationMessageFor(m => m.PrixMoyen)
    </div>

    <div>
        <label>Prix HT</label>
        @Html.TextBoxFor(m => m.Prix_Ht, new { @class = "form-control", type = "number", step = "0.01" })
        @Html.ValidationMessageFor(m => m.Prix_Ht)
    </div>

    <div>
        <label>TVA (%)</label>
        @Html.TextBoxFor(m => m.TVA, new { @class = "form-control", type = "number", step = "0.01" })
        @Html.ValidationMessageFor(m => m.TVA)
    </div>

    <div>
        <label>Remise (%)</label>
        @Html.TextBoxFor(m => m.Remise, new { @class = "form-control", type = "number", step = "0.01" })
        @Html.ValidationMessageFor(m => m.Remise)
    </div>

    <div>
        <label>Image du produit</label>
        <input type="file" name="imageFile" class="form-control" />
    </div>

    <div>
        <button type="submit" class="btn btn-primary">Créer</button>
        <a href="@Url.Action("ListeProduit", "Produit")" class="btn btn-secondary">Annuler</a>
    </div>
}
